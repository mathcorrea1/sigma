services:
  db:
    image: postgres:15
    container_name: sigma_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sigma_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sigma_password}
      POSTGRES_DB: ${POSTGRES_DB:-sigma_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sigma_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sigma_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sigma_backend
    ports:
      - "8000:8000"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sigma_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sigma_password}
      POSTGRES_DB: ${POSTGRES_DB:-sigma_db}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      DATABASE_URL: postgresql://${POSTGRES_USER:-sigma_user}:${POSTGRES_PASSWORD:-sigma_password}@db:5432/${POSTGRES_DB:-sigma_db}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      ALGORITHM: ${ALGORITHM:-HS256}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sigma_network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sigma_frontend
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:8000
    depends_on:
      - backend
    networks:
      - sigma_network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  sigma_network:
    driver: bridge
